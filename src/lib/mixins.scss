@import "./functions.scss";

@mixin letter-spacing {
  letter-spacing: calc(-1.5 / var(--text-7xl) * 1em);
}

$spec: (
  "headline1": (
     "weight": 250,
     "size": 96,
     "case": "none",
     "tracking": -1.5,
     "leading": 112
  ),
  "headline2": (
     "weight": 300,
     "size": 60,
     "case": "none",
     "tracking": -0.5,
     "leading": 72
  ),
  "headline3": (
     "weight": 400,
     "size": 48,
     "case": "none",
     "tracking": 0,
     "leading": 56
  ),
  "headline4": (
     "weight": 400,
     "size": 34,
     "case": "none",
     "tracking": 0.25,
     "leading": 40
  ),
  "headline5": (
     "weight": 400,
     "size": 24,
     "case": "none",
     "tracking": 0,
     "leading": 28
  ),
  "headline6": (
     "weight": 500,
     "size": 20,
     "case": "none",
     "tracking": 0.15,
     "leading": 24
  ),
  "subtitle1": (
     "weight": 400,
     "size": 16,
     "case": "none",
     "tracking": 0.15,
     "leading": 24
  ),
  "subtitle2": (
     "weight": 500,
     "size": 14,
     "case": "none",
     "tracking": 0.1,
     "leading": 28
  ),
  "body1": (
     "weight": 400,
     "size": 16,
     "case": "none",
     "tracking": 0.5,
     "leading": 20
  ),
  "body2": (
     "weight": 400,
     "size": 14,
     "case": "none",
     "tracking": 0.25,
     "leading": 24
  ),
  "button": (
     "weight": 500,
     "size": 14,
     "case": "uppercase",
     "tracking": 1.25,
     "leading": 16
  ),
  "caption": (
     "weight": 400,
     "size": 12,
     "case": "none",
     "tracking": 0.4,
     "leading": 16
  ),
  "overline": (
     "weight": 400,
     "size": 10,
     "case": "uppercase",
     "tracking": 1.5,
     "leading": 16
  )
);

@mixin typography($variant, $leading: null) {
  // get spec
  $weight: map-get(map-get($spec, $variant), "weight");
  $size: map-get(map-get($spec, $variant), "size");
  $case: map-get(map-get($spec, $variant), "case");
  $tracking: map-get(map-get($spec, $variant), "tracking");
  $lh: map-get(map-get($spec, $variant), "leading");
  @if $leading != null {
    $lh: $leading;
  }

  $hl: $lh / 2;
  margin-bottom: -#{get-rem($hl)};
  line-height: get-rem($lh);
  font-size: get-rem($size);
  letter-spacing: #{$tracking / $size}em;
  @if ($case != "none") {
    text-transform: #{$case};
  }

  &::before {
    display: inline-block;
    height: get-rem($lh);
    content: '';
  }

  &::after {
    display: inline-block;
    vertical-align: -#{get-rem($hl)};
    content: '';
  }
}

@mixin fill-parent {
   position: absolute;
   @apply inset-0;
   content: '';
}

@mixin rtl($property, $ltr-value, $rtl-value) {
   #{$property}: $ltr-value;
 
   [dir=rtl] & {
     #{$property}: $rtl-value;
   }
 }

@mixin active ($type: "dark", $selector: "::before") {
   &#{$selector} {
      transition: background-color 75ms linear;
      @if ($selector == "::after" or $selector == "::before") {
         @include fill-parent;
      }
   }
   @if ($type == "dark") {
      // hover-dark: 0.08;
      // focus-dark: 0.24;
      // pressed-dark: 0.32;
      // selected-dark: 0.16;
      &.selected#{$selector} {
         background-color: rgba(255, 255, 255, 0.16);
      }
      &:hover#{$selector} {
         background-color: rgba(255, 255, 255, 0.08);
      }
      &:focus#{$selector} {
         background-color: rgba(255, 255, 255, 0.24);
      }
      &:active#{$selector} {
         background-color: rgba(255, 255, 255, 0.32);
      }
   }
   @else {
      // hover-light: 0.04;
      // focus-light: 0.12;
      // pressed-light: 0.16;
      // selected-light: 0.08;
      &.selected#{$selector} {
         background-color: rgba(0, 0, 0, 0.08);
      }
      &:hover#{$selector} {
         background-color: rgb(0, 0, 0, 0.04);
      }
      &:focus#{$selector} {
         background-color: rgba(0, 0, 0, 0.12);
      }
      &:active#{$selector} {
         background-color: rgba(0, 0, 0, 0.16);
      }
   }
   
}